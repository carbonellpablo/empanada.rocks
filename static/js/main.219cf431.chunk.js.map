{"version":3,"sources":["config.tsx","App.tsx","index.tsx"],"names":["NFTfactory","address","process","abi","App","useState","txId","a","window","ethereum","provider","ethers","providers","Web3Provider","request","method","signer","getSigner","contract","Contract","safeMint","transaction","console","wait","log","error","className","src","width","height","onClick","e","preventDefault","mintNFT","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0u9DAGMA,EAAa,CACjBC,QAASC,6CACTC,I,MAJMA,K,OC4EOC,MAxEf,WAA6B,IAAD,EACFC,qBADE,mBACnBC,EADmB,aAEAD,sBAFA,+DAQ1B,kCAAAE,EAAA,kEAEmC,qBAApBC,OAAOC,SAFtB,wBAGYC,EAAW,IAAIC,IAAOC,UAAUC,aAAaL,OAAOC,UAHhE,SAKYD,OAAOC,SAASK,QAAQ,CAC5BC,OAAQ,wBANhB,cASYC,EAASN,EAASO,YAElBC,EAAW,IAAIP,IAAOQ,SAC1BnB,EAAWC,QACXD,EAAWG,IACXa,GAdR,SAiBgCE,EAASE,WAjBzC,cAiBYC,EAjBZ,YAmBMC,QAnBN,UAmBwBD,EAAYE,OAnBpC,yBAmBcC,IAnBd,0EAuBIF,QAAQG,MAAR,MAvBJ,2DAR0B,sBAmC1B,OAnC0B,UAoCxB,sBAAKC,UAAU,MAAf,UACE,+CACA,0EACA,qBAAKC,IAAI,aAAaC,MAAM,QAAQC,OAAO,UAE1CvB,EACC,0GAEQ,OAGR,wBAAQwB,QA5CM,SAACC,GACnBA,EAAEC,iBAJsB,mCAKxBC,IA0CI,qCAGF,sBAAKP,UAAU,UAAf,UACE,uCACA,qDACA,4DACA,4BACE,mBAAGQ,KAAK,mDAAR,oCAMJ,sBAAKR,UAAU,UAAf,UACE,8CACA,mEACA,2FACA,4EACA,kECnERS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.219cf431.chunk.js","sourcesContent":["import contract from './artifacts/contracts/NFTfactory.sol/NFTfactory.json';\nconst { abi }: any = contract;\n\nconst NFTfactory = {\n  address: process.env.REACT_APP_NFT_FACTORY_DEPLOYED_ADDRESS as string,\n  abi,\n};\n\nexport { NFTfactory };\n","import { useState } from 'react';\nimport './App.css';\nimport { ethers } from 'ethers';\nimport { NFTfactory } from './config';\n\nfunction App(): JSX.Element {\n  const [txId, setTxId] = useState();\n  const [error, setError] = useState();\n  const handleClick = (e: React.FormEvent) => {\n    e.preventDefault();\n    mintNFT();\n  };\n\n  async function mintNFT() {\n    try {\n      if (typeof window.ethereum !== 'undefined') {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n        await window.ethereum.request({\n          method: 'eth_requestAccounts',\n        });\n\n        const signer = provider.getSigner();\n\n        const contract = new ethers.Contract(\n          NFTfactory.address,\n          NFTfactory.abi,\n          signer\n        );\n\n        const transaction = await contract.safeMint();\n\n        console.log(await transaction.wait());\n      }\n    } catch (e) {\n      //eslint-disable-next-line\n      console.error(e);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>empanda.rocks</h1>\n      <h2>An NFT collection featuring 12 empanadas</h2>\n      <img src=\"./base.png\" width=\"400px\" height=\"400px\" />\n\n      {txId ? (\n        <p>\n          Congratulations! your NFT was transfer. You can see the transaction\n          here:{' '}\n        </p>\n      ) : (\n        <button onClick={handleClick}>Get your free Empanada!</button>\n      )}\n\n      <div className=\"content\">\n        <h2>About</h2>\n        <p>Total supply: 12 NFT</p>\n        <p>Max mint per address: 1 NFT</p>\n        <p>\n          <a href=\"https://github.com/carbonellpablo/empanada.rocks\">\n            Github repository\n          </a>\n        </p>\n      </div>\n\n      <div className=\"content\">\n        <h2>Instructions</h2>\n        <p>Only works on desktop, not mobile.</p>\n        <p>You need to have the browser extension Metamask installed.</p>\n        <p>Make sure you are on the &apos;Rinkeby&apos; network.</p>\n        <p>Click on the button above!</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}